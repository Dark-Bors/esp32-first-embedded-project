[1/10] Performing build step for 'bootloader'
[1/1] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\Users\97254\esp_projects\blink_led\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.4_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.4.2/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 C:/Users/97254/esp_projects/blink_led/build/bootloader/bootloader.bin"
Bootloader binary size 0x51c0 bytes. 0x2e40 bytes (36%) free.
[2/10] No install step for 'bootloader'
[3/10] Completed 'bootloader'
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/blink_led.c.obj
[5/10] Linking C static library esp-idf\main\libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable blink_led.elf
[8/10] Generating binary image from built executable
esptool.py v4.9.0
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated C:/Users/97254/esp_projects/blink_led/build/blink_led.bin
[9/10] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\Users\97254\esp_projects\blink_led\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.4_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.4.2/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/97254/esp_projects/blink_led/build/partition_table/partition-table.bin C:/Users/97254/esp_projects/blink_led/build/blink_led.bin"
blink_led.bin binary size 0x33b00 bytes. Smallest app partition is 0x100000 bytes. 0xcc500 bytes (80%) free.
[9/10] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.4.2\components\esptool_py && C:\Espressif\tools\cmake\3.30.2\bin\cmake.exe -D IDF_PATH=C:/Espressif/frameworks/esp-idf-v5.4.2 -D SERIAL_TOOL=C:/Espressif/python_env/idf5.4_py3.11_env/Scripts/python.exe;;C:/Espressif/frameworks/esp-idf-v5.4.2/components/esptool_py/esptool/esptool.py;--chip;esp32s3 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/Users/97254/esp_projects/blink_led/build -P C:/Espressif/frameworks/esp-idf-v5.4.2/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32s3 -p COM4 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x0 bootloader/bootloader.bin 0x10000 blink_led.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.9.0
Serial port COM4
Connecting....
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE, Embedded PSRAM 8MB (AP_3v3)
Crystal is 40MHz
MAC: 48:27:e2:e8:b4:dc
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x00043fff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 20928 bytes to 13320...
Writing at 0x00000000... (100 %)
Wrote 20928 bytes (13320 compressed) at 0x00000000 in 0.6 seconds (effective 297.1 kbit/s)...
Hash of data verified.
Compressed 211712 bytes to 112597...
Writing at 0x00010000... (14 %)
Writing at 0x0001cb48... (28 %)
Writing at 0x00022d67... (42 %)
Writing at 0x000290c1... (57 %)
Writing at 0x0002fb5e... (71 %)
Writing at 0x00037f3c... (85 %)
Writing at 0x0003dfe0... (100 %)
Wrote 211712 bytes (112597 compressed) at 0x00010000 in 2.7 seconds (effective 631.2 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 586.7 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
